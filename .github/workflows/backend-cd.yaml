name: Backend CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: 949829287785.dkr.ecr.us-east-1.amazonaws.com/udacity-backend-repo
  IMAGE_TAG: latest

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: ./movie-app/backend

      - name: Run ESLint
        run: npm run lint
        working-directory: ./movie-app/backend

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: ./movie-app/backend

      - name: Run tests
        run: npm test
        working-directory: ./movie-app/backend

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $ECR_REPOSITORY

      - name: Build Docker image
        run: docker build -t $ECR_REPOSITORY:$IMAGE_TAG ./movie-app/backend

      - name: Push Docker image to ECR
        run: docker push $ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig for EKS cluster
        run: aws eks --region $AWS_REGION update-kubeconfig --name movie-cluster

      - name: Create regcred secret if it doesn't exist
        run: |
          kubectl get secret regcred || \
          kubectl create secret docker-registry regcred \
            --docker-server=949829287785.dkr.ecr.us-east-1.amazonaws.com \
            --docker-username=AWS \
            --docker-password=$(aws ecr get-login-password --region $AWS_REGION)

      - name: Deploy Backend
        run: kubectl apply -f ./movie-app/k8/backend-dep-service.yaml
